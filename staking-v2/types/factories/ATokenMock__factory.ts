/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { ATokenMock } from "../ATokenMock";

export class ATokenMock__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    aic: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ATokenMock> {
    return super.deploy(aic, overrides || {}) as Promise<ATokenMock>;
  }
  getDeployTransaction(
    aic: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(aic, overrides || {});
  }
  attach(address: string): ATokenMock {
    return super.attach(address) as ATokenMock;
  }
  connect(signer: Signer): ATokenMock__factory {
    return super.connect(signer) as ATokenMock__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ATokenMock {
    return new Contract(address, _abi, signerOrProvider) as ATokenMock;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IAaveIncentivesController",
        name: "aic",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "emission",
        type: "uint256",
      },
    ],
    name: "AssetConfigUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "AssetIndexUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "RewardsAccrued",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "UserIndexUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "_aic",
    outputs: [
      {
        internalType: "contract IAaveIncentivesController",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cleanUserState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "userBalance",
        type: "uint256",
      },
    ],
    name: "doubleHandleActionOnAic",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getScaledUserBalanceAndSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "userBalance",
        type: "uint256",
      },
    ],
    name: "handleActionOnAic",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "scaledTotalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "userBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
    ],
    name: "setUserBalanceAndSupply",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516103f83803806103f883398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610082565b600060208284031215610065578081fd5b81516001600160a01b038116811461007b578182fd5b9392505050565b610367806100916000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063b1bf962d1161005b578063b1bf962d146100d4578063b39944ba146100e9578063b41c6f98146100f1578063f794ca51146101065761007d565b80630afbcdc91461008257806334743e7c146100ac5780638d279294146100c1575b600080fd5b610095610090366004610271565b610119565b6040516100a3929190610323565b60405180910390f35b6100bf6100ba366004610292565b610124565b005b6100bf6100cf366004610292565b61018f565b6100dc610229565b6040516100a3919061031a565b6100bf61022f565b6100f961023b565b6040516100a39190610306565b6100bf6101143660046102c4565b61024a565b600154600254915091565b6000546040516318c39f1760e11b81526001600160a01b03909116906331873e2e90610158908690869086906004016102e5565b600060405180830381600087803b15801561017257600080fd5b505af1158015610186573d6000803e3d6000fd5b50505050505050565b6000546040516318c39f1760e11b81526001600160a01b03909116906331873e2e906101c3908690869086906004016102e5565b600060405180830381600087803b1580156101dd57600080fd5b505af11580156101f1573d6000803e3d6000fd5b50506000546040516318c39f1760e11b81526001600160a01b0390911692506331873e2e9150610158908690869086906004016102e5565b60025490565b60006001819055600255565b6000546001600160a01b031681565b600191909155600255565b80356001600160a01b038116811461026c57600080fd5b919050565b600060208284031215610282578081fd5b61028b82610255565b9392505050565b6000806000606084860312156102a6578182fd5b6102af84610255565b95602085013595506040909401359392505050565b600080604083850312156102d6578182fd5b50508035926020909101359150565b6001600160a01b039390931683526020830191909152604082015260600190565b6001600160a01b0391909116815260200190565b90815260200190565b91825260208201526040019056fea2646970667358221220fc2e29c17ec6edde31f379a5d27aa3fa4386e9558feab194c43b64f955f99c9b64736f6c63430007050033";
