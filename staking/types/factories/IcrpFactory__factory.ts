/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer } from "ethers";
import { Provider } from "@ethersproject/providers";

import type { IcrpFactory } from "../IcrpFactory";

export class IcrpFactory__factory {
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IcrpFactory {
    return new Contract(address, _abi, signerOrProvider) as IcrpFactory;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "pool",
        type: "address",
      },
    ],
    name: "LogNewCrp",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "isCrp",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "factoryAddress",
        type: "address",
      },
      {
        components: [
          {
            internalType: "string",
            name: "poolTokenSymbol",
            type: "string",
          },
          {
            internalType: "string",
            name: "poolTokenName",
            type: "string",
          },
          {
            internalType: "address[]",
            name: "constituentTokens",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "tokenBalances",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "tokenWeights",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "swapFee",
            type: "uint256",
          },
        ],
        internalType: "struct ICRPFactory.PoolParams",
        name: "poolParams",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "canPauseSwapping",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "canChangeSwapFee",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "canChangeWeights",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "canAddRemoveTokens",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "canWhitelistLPs",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "canChangeCap",
            type: "bool",
          },
        ],
        internalType: "struct ICRPFactory.Rights",
        name: "rights",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "smartPoolImplementation",
        type: "address",
      },
      {
        internalType: "address",
        name: "proxyAdmin",
        type: "address",
      },
    ],
    name: "newCrp",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];
